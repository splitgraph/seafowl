name: Build nightly binaries and perform releases

on:
  # For pushes to main, build binaries and store them as artifacts (also upload Docker images)
  # For pushes to main with tags, also make a GitHub release.
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build_binary:
    name: Build the binaries
    runs-on: ${{ matrix.os }}
    permissions:
      packages: write
      contents: read
      
    strategy:
      matrix:
        build: [linux-x86_64]
        include:
          - build: linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu

    steps:
      - name: Install prerequisites
        # Taken from https://github.com/apache/arrow-datafusion/blob/master/.github/workflows/rust.yml
        shell: bash
        run: |
          mkdir -p $HOME/d/protoc
          cd $HOME/d/protoc
          export PROTO_ZIP="protoc-21.4-${{ matrix.build }}.zip"
          curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v21.4/$PROTO_ZIP
          unzip $PROTO_ZIP
          echo "$HOME/d/protoc/bin" >> $GITHUB_PATH
          export PATH=$PATH:$HOME/d/protoc/bin
          protoc --version

      - name: Checkout the repository
        uses: actions/checkout@v4
      - run: |
          rustup toolchain install nightly --profile minimal
          rustup default nightly

      - uses: Swatinem/rust-cache@v2
        with:
          # shared-key: ""
          # key: ""
          # env-vars: ""
          # workspaces: ""

          # Determines if the cache should be saved even when the workflow has failed.
          cache-on-failure: "true"

      - name: Build the release binary
        shell: bash
        run: |
          export PATH=$PATH:$HOME/d/protoc/bin
          cargo build --release

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: ghcr.io/mrchypark/seafowl
          tags: |
            type=semver,pattern=v{{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=sha,prefix={{branch}}-,enable=${{ !startsWith(github.ref, 'refs/tags/v') }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
