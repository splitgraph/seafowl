name: Build nightly binaries

on:
  push:
    branches:
      - main

jobs:
  build_binary:
    name: Build the binaries
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        build: [linux, macos, win-msvc]
        include:
          - build: linux
            os: ubuntu-18.04
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: win-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2
        with:
          # shared-key: ""
          # key: ""
          # env-vars: ""
          # workspaces: ""

          # Determines if the cache should be saved even when the workflow has failed.
          cache-on-failure: "true"

      - name: Build the release binary
        run: cargo build --release

      - name: Strip release binary (linux and macos)
        if: matrix.build == 'linux' || matrix.build == 'macos'
        run: strip "target/release/seafowl"

      - name: Prepare artifact name
        shell: bash
        run: |
          echo "ARTIFACT=seafowl-nightly-${{ matrix.target }}" >> $GITHUB_ENV

          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            echo "SOURCE=target/release/seafowl.exe" >> $GITHUB_ENV
          else
            echo "SOURCE=target/release/seafowl" >> $GITHUB_ENV
          fi

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.SOURCE }}
