services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
    ports:
      - "5432:5432"
    restart: unless-stopped

  dex:
    image: ghcr.io/dexidp/dex:v2.38.0 # mitigate https://github.com/dexidp/dex/issues/3559
    ports:
      - "5556:5556"
    volumes:
      - ./tests/dex.yaml:/config-dev.yaml
    command: dex serve /config-dev.yaml

  minio:
    image: minio/minio:latest
    depends_on:
      - dex
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_CONSOLE_ADDRESS: ":9001"
      DEX_HOST: "localhost"
      DEX_PORT: "5556"
      MINIO_IDENTITY_OPENID_CONFIG_URL: "http://dex:5556/dex/.well-known/openid-configuration"
      MINIO_IDENTITY_OPENID_CLIENT_ID: "example-app"
      MINIO_IDENTITY_OPENID_CLIENT_SECRET: "ZXhhbXBsZS1hcHAtc2VjcmV0"
      MINIO_IDENTITY_OPENID_CLAIM_NAME: "name"
    command: minio server /data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 1s

  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./tests/data:/test-data
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add test-minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc rm -r --force test-minio/seafowl-test-bucket;  /usr/bin/mc mb
      test-minio/seafowl-test-bucket; /usr/bin/mc cp -r test-data test-minio/seafowl-test-bucket;
      /usr/bin/mc anonymous set public
      test-minio/seafowl-test-bucket/test-data/table_with_ns_column.parquet;

      /usr/bin/mc admin user add test-minio test-user test-pass; /usr/bin/mc admin policy attach
      test-minio readwrite --user test-user;

      /usr/bin/mc mb test-minio/seafowl-test-bucket-public; /usr/bin/mc anonymous set public
      test-minio/seafowl-test-bucket-public; exit 0; "

  fake-gcs:
    image: tustvold/fake-gcs-server
    command:
      ["-scheme", "http", "-backend", "memory", "-data", "test/", "-public-host", "localhost:4443"]
    ports:
      - "4443:4443"
    volumes:
      - ./tests/data:/test/test-data

  create-fake-gcs-buckets:
    image: curlimages/curl:8.00.1
    depends_on:
      - fake-gcs
    entrypoint: >
      curl -v -X POST --data-binary '{"name":"seafowl-test-bucket"}' -H "Content-Type:
      application/json" "http://fake-gcs:4443/storage/v1/b"
