[workspace]
members = ["clade", "object_store_factory"]

[workspace.dependencies]
arrow = { version = "52.2.0", features = ["test_utils"] }
arrow-buffer = "52.2.0"
arrow-csv = "52.2.0"
arrow-flight = "52.2.0"
# For the JSON format support
# https://github.com/apache/arrow-rs/pull/2868
# https://github.com/apache/arrow-rs/pull/2724
arrow-integration-test = "52.2.0"
arrow-row = "52.2.0"
arrow-schema = "52.2.0"
async-trait = "0.1.83"

datafusion = { version = "41.0.0", features = ["backtrace"] }
datafusion-common = "41.0.0"
datafusion-expr = "41.0.0"
datafusion-functions-nested = "41.0.0"

futures = "0.3"

itertools = ">=0.10.0"
object_store = { version = "0.10.2", features = ["aws", "azure", "gcp"] }
prost = "0.12.6"

serde = "1.0.213"
serde_json = "1.0.132"

tempfile = "3"
tokio = { version = "1.40", features = ["macros", "rt", "rt-multi-thread", "signal", "process"] }
tracing = { version = "0.1", features = ["log"] }
tracing-log = "0.2"
tracing-subscriber = { version = "0.3.18", features = ["json", "env-filter"] }
url = "2.5"

[package]
name = "seafowl"
build = "build.rs"
version = "0.5.8"
edition = "2021"

readme = "README.md"
description = "Seafowl is an analytical database designed for modern data-driven Web applications."
authors = ["Splitgraph, Inc. <support@splitgraph.com>"]
keywords = ["database", "http", "web"]
homepage = "https://seafowl.io"
license = "Apache-2.0"
include = [
    "src/**/*.rs",
    "Cargo.toml",
    "build.rs",
    "migrations",

]

[features]
catalog-postgres = ["sqlx/postgres"]
default = ["catalog-postgres", "frontend-arrow-flight", "frontend-postgres", "remote-tables"]
frontend-arrow-flight = ["dep:tonic", "dep:arrow-flight", "arrow-flight/flight-sql-experimental"]
frontend-postgres = ["convergence", "convergence-arrow"]
remote-tables = ["dep:datafusion-remote-tables"]

[dependencies]
arrow = { workspace = true }
arrow-buffer = { workspace = true }
arrow-csv = { workspace = true }
arrow-flight = { workspace = true, optional = true }
# For the JSON format support
# https://github.com/apache/arrow-rs/pull/2868
# https://github.com/apache/arrow-rs/pull/2724
arrow-integration-test = { workspace = true }
arrow-row = { workspace = true }
arrow-schema = { workspace = true }
async-trait = { workspace = true }
base64 = "0.22.1"

bytes = "1.8.0"
chrono = { version = "0.4", default-features = false }
clade = { path = "clade" }
clap = { version = "4.5.20", features = [ "derive" ] }
config = "0.14.0"

# PG wire protocol support
convergence = { git = "https://github.com/splitgraph/convergence", branch = "datafusion-41-upgrade", optional = true }
convergence-arrow = { git = "https://github.com/splitgraph/convergence", branch = "datafusion-41-upgrade", optional = true }

dashmap = "6.1.0"

datafusion = { workspace = true }
datafusion-common = { workspace = true }
datafusion-expr = { workspace = true }
datafusion-functions-nested = { workspace = true }

datafusion-remote-tables = { path = "./datafusion_remote_tables", optional = true }

deltalake = { version = "0.20.1", features = ["datafusion"] }

futures = "0.3"
hex = ">=0.4.0"
indexmap = "2.6.0"
itertools = { workspace = true }
lazy_static = ">=1.4.0"
metrics = { version = "0.23.0" }
metrics-exporter-prometheus = { version = "0.15.3" }
moka = { version = "0.12.5", default-features = false, features = ["future", "atomic64", "quanta"] }
object_store = { version = "0.10.2", features = ["aws", "azure", "gcp"] }
object_store_factory = { path = "object_store_factory" }
percent-encoding = "2.2.0"
prost = { workspace = true }

# Needs to be in non-dev because repository::testutils can't be
# imported by tests::end_to_end if it's cfg(test).
rand = "0.8"
regex = ">=1.6.0"
reqwest = { version = "0.12.8", features = [ "stream" ] }
rmp = "0.8.11"
rmp-serde = "1.1.1"
rmpv = { version = "1.0.0", features = ["with-serde"] }
rustyline = "14.0"
serde = { workspace = true }
serde_json = { workspace = true }
sha2 = ">=0.10.1"
sqlparser = { version = "0.49", features = ["visitor"] }
sqlx = { version = "0.7.1", features = [ "runtime-tokio-rustls", "sqlite", "any", "uuid" ] }
strum = ">=0.24"
strum_macros = ">=0.24"
tempfile = "3"
thiserror = "1"
tokio = { workspace = true }
tokio-graceful-shutdown = { version = "0.15" }
tonic = { version = "0.11.0", optional = true }
tower = "0.5"
tracing = { workspace = true }
tracing-log = "0.2"
tracing-subscriber = { version = "0.3.18", features = ["json", "env-filter"] }
url = "2.5"
uuid = "1.11.0"
warp = "0.3.6"

# For WASM user-defined functions
wasi-common = "25.0.0"
wasmtime = "25.0.2"
wasmtime-wasi = "26.0.0"

[dev-dependencies]
assert_cmd = "2"
assert_unordered = "0.3"
aws-config = { version = "1.5.8", features = ["behavior-version-latest"] }
aws-credential-types = { version = "1.2.1", features = ["hardcoded-credentials"] }
aws-sdk-sts = { version = "1.46.0", features = ["behavior-version-latest"] }
rstest = "*"
serial_test = "3"
tonic-reflection = "0.11"
wiremock = "0.6"

[build-dependencies]
anyhow = "1.0.91"  # for build.rs
vergen-gitcl = { version = "1", features = ["build", "cargo", "rustc"] }

[profile.release]
codegen-units = 1
lto = true
strip = true
