[workspace]

[package]
name = "seafowl"
build = "build.rs"
version = "0.2.11"
edition = "2021"

readme = "README.md"
description = "Seafowl is an analytical database designed for modern data-driven Web applications."
authors = ["Splitgraph, Inc. <support@splitgraph.com>"]
keywords = ["database", "http", "web"]
homepage = "https://seafowl.io"
license = "Apache-2.0"
include = [
    "src/**/*.rs",
    "Cargo.toml",
    "build.rs",
    "migrations",

]

[features]
catalog-postgres = ["sqlx/postgres"]
default = ["catalog-postgres", "delta-tables", "frontend-postgres", "object-store-s3", "remote-tables"]
delta-tables = ["dep:deltalake", "dep:dynamodb_lock"]
frontend-postgres = ["convergence", "convergence-arrow"]
object-store-s3 = ["object_store/aws"]
remote-tables = ["dep:datafusion-remote-tables"]

[dependencies]
arrow = "31.0.0"
arrow-buffer = "31.0.0"
# For the JSON format support
# https://github.com/apache/arrow-rs/pull/2868
# https://github.com/apache/arrow-rs/pull/2724
arrow-integration-test = "31.0.0"
arrow-schema = "31.0.0"
async-trait = "0.1.64"
base64 = "0.21.0"

bytes = "1.4.0"
chrono = { version = "0.4", default_features = false }
clap = { version = "3.2.19", features = [ "derive" ] }
config = "0.13.1"

# PG wire protocol support
convergence = { git = "https://github.com/splitgraph/convergence", branch = "datafusion-16-upgrade", optional = true }
convergence-arrow = { git = "https://github.com/splitgraph/convergence", branch = "datafusion-16-upgrade", package = "convergence-arrow", optional = true }

datafusion = "16.0.0"
datafusion-common = "16.0.0"
datafusion-expr = "16.0.0"
datafusion-proto = "16.0.0"

datafusion-remote-tables = { path = "./datafusion_remote_tables", optional = true }

deltalake = { git = "https://github.com/splitgraph/delta-rs", branch = "datafusion-16-upgrade", features = ["s3", "datafusion-ext"], optional = true }
dynamodb_lock = { git = "https://github.com/splitgraph/delta-rs", branch = "datafusion-16-upgrade", package = "dynamodb_lock", default_features = false, features = ["native-tls"], optional = true }

futures = "0.3"
hex = ">=0.4.0"
itertools = ">=0.10.0"
lazy_static = ">=1.4.0"
log = "0.4"
moka = { version = "0.9.3", default_features = false, features = ["future", "atomic64", "quanta"] }
object_store = "0.5.2"
parking_lot = "0.12.1"
percent-encoding = "2.2.0"
pretty_env_logger = "0.4"
prost = "0.11"

# Needs to be in non-dev because repository::testutils can't be
# imported by tests::end_to_end if it's cfg(test).
rand = "0.8"
regex = ">=1.6.0"
reqwest = { version = "0.11.14", features = [ "stream" ] }
rmp = "0.8.11"
rmp-serde = "1.1.1"
rmpv = { version = "1.0.0", features = ["with-serde"] }
serde = "1.0.138"
serde_json = "1.0.93"
sha2 = ">=0.10.1"
sqlparser = "0.30.0"
sqlx = { version = "0.6.2", features = [ "runtime-tokio-rustls", "sqlite", "any" ] }
strum = ">=0.24"
strum_macros = ">=0.24"
tempfile = "3"
tokio = { version = "1.0", features = ["macros", "rt", "rt-multi-thread", "signal", "process"] }
url = "2.2"
warp = "0.3"
wasi-common = "1.0.1"

# For WASM user-defined functions
wasmtime = "1.0.1"
wasmtime-wasi = "1.0.1"

[patch.crates-io]
datafusion = { git = "https://github.com/splitgraph/arrow-datafusion", branch = "insert-target-columns-empty-fix-df16" }
datafusion-common = { git = "https://github.com/splitgraph/arrow-datafusion", branch = "insert-target-columns-empty-fix-df16" }
datafusion-expr = { git = "https://github.com/splitgraph/arrow-datafusion", branch = "insert-target-columns-empty-fix-df16" }
datafusion-proto = { git = "https://github.com/splitgraph/arrow-datafusion", branch = "insert-target-columns-empty-fix-df16" }

[dev-dependencies]
assert_unordered = "0.3"
datafusion-common = "16.0.0"
mockall = "0.11.1"
rstest = "*"
wiremock = "0.5"

[build-dependencies]
anyhow = "1.0.63"  # for build.rs
prost-build = "0.11.6"
vergen = "7"

[profile.release]
codegen-units = 1
lto = true
strip = true
